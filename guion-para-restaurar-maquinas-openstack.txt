CENTRO="wirtz"
USUARIO="xuedup037"
SABOR="a1.4c8m"
REDE="provnet-formacion-vlan-133"

module load openstack
source /opt/cesga/openstack/osc.bash_completion
source ./openstack.sh

recuperaMiClusterHadoop() {
  for num in {1..4..1}; do \
	openstack server create \
		--flavor ${SABOR} \
		--volume vol-${CENTRO}-${USUARIO}-hadoop${num} \
		--security-group sg-${CENTRO}-${USUARIO} \
		--key-name kp-${CENTRO}-${USUARIO} \
		--network ${REDE} \
		${CENTRO}-${USUARIO}-hadoop${num} ; done
}

archivaMiClusterHadoop() {
	for num in {1..4..1}; do \
		openstack server delete ${CENTRO}-${USUARIO}-hadoop${num}
	}
}

#archivaMiClusterHadoop
#recuperaMiClusterHadoop
IPS: openstack server list --format value --column Name --column Networks|grep xuedua0

DESDE hadoop1 (conecta a hadoop1 USANDO SU IP NUEVA desde el hadoop del cesga)

1) Borras .ssh/known_hosts
	rm $HOME/.ssh/known_hosts
2) Editas el /etc/hosts con las IPs nuevas de hadoop[1...4]
	sudo nano /etc/hosts
3) Ejecutas el ssh-keyscan (con for)
	for servidor in $(cat /etc/hosts|grep hadoop); do \
  ssh-keyscan -H $servidor; done >> /home/cesgaxuser/.ssh/known_hosts
4) Con clush copias directorio .ssh
	clush -l cesgaxuser -bw hadoop[2-4] --copy /home/cesgaxuser/.ssh --dest /home/cesgaxuser/
5) Para el /etc/hosts no puedes ejecutar un copy de clush porque tendrías que ejecutar como root. Un workaround (rodeo) sería:
	clush -l cesgaxuser -bw hadoop[2-4] --copy /etc/hosts --dest /tmp/
	clush -l cesgaxuser -bw hadoop[2-4] sudo cp /tmp/hosts /etc 
	clush -l cesgaxuser -bw hadoop[2-4] sudo chown root:root /etc/hosts

